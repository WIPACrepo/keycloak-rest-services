[wipac:cicd_setup_builder]
pypi_name = wipac-keycloak-rest-services
python_min = 3.8
package_paths = krs
keywords_spaced = keycloak rest tools utilities

[metadata]  # generated by wipac:cicd_setup_builder
name = wipac-keycloak-rest-services
version = attr: krs.__version__
url = https://github.com/WIPACrepo/keycloak-rest-services
author = WIPAC Developers
author_email = developers@icecube.wisc.edu
description = Services surrounding KeyCloak, that use the REST API to read/update state
long_description = file: README.md
long_description_content_type = text/markdown
keywords =
	keycloak
	rest
	tools
	utilities
	WIPAC
	IceCube
license = MIT
classifiers =
	Development Status :: 5 - Production/Stable
	License :: OSI Approved :: MIT License
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
download_url = https://pypi.org/project/wipac-keycloak-rest-services/
project_urls =
	Tracker = https://github.com/WIPACrepo/keycloak-rest-services/issues
	Source = https://github.com/WIPACrepo/keycloak-rest-services

[semantic_release]  # generated by wipac:cicd_setup_builder
version_variable = krs/__init__.py:__version__
upload_to_pypi = True
patch_without_tag = True
commit_parser = semantic_release.history.tag_parser
minor_tag = [minor]
fix_tag = [fix]
branch = master

[options]  # generated by wipac:cicd_setup_builder: 'python_requires', 'packages'
install_requires =
	aio_pika
	cachetools
	ldap3
	motor
	pyjwt[crypto]
	requests
	unidecode
	wipac-dev-tools
	wipac-rest-tools
python_requires = >=3.8, <3.11
packages =
	krs

[options.package_data]  # generated by wipac:cicd_setup_builder: '*'
* = py.typed

[options.extras_require]
tests =
	pytest
	pytest-asyncio
	pytest-cov
	pytest-mock
	coverage
	flake8

[coverage:run]
branch = True
parallel = True

[coverage:report]
# regexes for lines to exclude from consideration
exclude_lines =
	# Have to re-enable the standard pragma
	pragma: no cover

	# Don't complain about missing debug-only code:
	def __repr__
	if self\.debug

	# Don't complain if tests don't hit defensive assertion code:
	raise AssertionError
	raise NotImplementedError

	# Don't complain if non-runnable code isn't run:
	if 0:
	if __name__ == .__main__.:
omit =
	*__init__*
ignore_errors = True

[coverage:html]
directory = htmlcov

[flake8]
ignore = D403,E124,E128,E226,E302,E305,E501,W503,W504
exclude = env,tests

