name: wipac ci/cd

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:

  keycloak-image-build:
    runs-on: ubuntu-latest
    outputs:
      keycloak-tag: ${{ steps.docker_meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/WIPACRepo/keycloak-rest-services
          tags: |
            type=ref,prefix=test-keycloak-,event=branch
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: resources/keycloak-image
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: WIPACrepo/wipac-dev-flake8-action@v1

  py-setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - uses: WIPACrepo/wipac-dev-py-setup-action@pip-fix

  py-versions:
    needs: [py-setup]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: versions
        uses: WIPACrepo/wipac-dev-py-versions-action@v1

  pip-install:
    needs: [py-versions]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.py3_versions }}
      - run: |
          pip install --upgrade pip wheel setuptools
          pip install .

  py-tests:
    needs: [py-versions]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: ["actions", "krs"]
    services:
      rabbitmq:
        image: bitnami/rabbitmq:3.8
        env:
          RABBITMQ_USERNAME: admin
          RABBITMQ_PASSWORD: admin
          RABBITMQ_VHOST: keycloak
        options: --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5672:5672
        - 15672:15672
    steps:
      - uses: actions/checkout@v3
      - name: LDAP
        run: |
          resources/start-ldap.sh &
          sleep 2
      - name: Keycloak
        run: |
          resources/start-keycloak.sh &
          until curl http://localhost:8080 >/dev/null 2>/dev/null
          do
              echo -n "."
              sleep 5
          done
          echo "Keycloak Ready"
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ fromJSON(needs.py-versions.outputs.matrix).py3_versions[0] }}
      - run: |
          pip install --upgrade pip wheel setuptools
          pip install .[tests]
      - run: |
          . env/bin/activate &&
          python -m pytest tests/${{ matrix.test }} --tb=short --log-level=INFO

  release:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
    needs: [py-setup, pip-install, py-tests]
    runs-on: ubuntu-latest
    concurrency: release
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    - name: Python Semantic Release
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        repository_username: __token__
        repository_password: ${{ secrets.PYPI_TOKEN }}

  docker:
    name: "Docker Image"
    needs: [py-setup, pip-install, py-tests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Project
      uses: actions/checkout@v3
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          wipac/keycloak-rest-services
          ghcr.io/WIPACRepo/keycloak-rest-services
        tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: ${{ github.event_name != 'pull_request' }}
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      if: ${{ github.event_name != 'pull_request' }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
